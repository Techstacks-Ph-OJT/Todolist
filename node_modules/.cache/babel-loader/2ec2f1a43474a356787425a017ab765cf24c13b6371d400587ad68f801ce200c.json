{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [editTask, setEditTask] = useState('');\n  const [editing, setEditing] = useState(false);\n  const addTask = () => {\n    setTasks([...tasks, {\n      name: newTask,\n      completed: false\n    }]);\n    setNewTask('');\n  };\n  const deleteTask = taskToDelete => {\n    setTasks(tasks.filter(task => task !== taskToDelete));\n  };\n  const completeTask = completedTask => {\n    setTasks(tasks.map(task => {\n      if (task.name === completedTask) {\n        return {\n          ...task,\n          completed: true\n        };\n      } else {\n        return task;\n      }\n    }));\n  };\n  const incompleteTask = completedTask => {\n    setTasks(tasks.map(task => {\n      if (task.name === completedTask) {\n        return {\n          ...task,\n          completed: false\n        };\n      } else {\n        return task;\n      }\n    }));\n  };\n  const editTaskHandler = taskToEdit => {\n    setEditing(true);\n    setEditTask(taskToEdit);\n    setNewTask(taskToEdit.name);\n  };\n  const saveTask = () => {\n    setTasks(tasks.map(task => task === editTask ? {\n      ...task,\n      name: newTask\n    } : task));\n    setEditing(false);\n    setEditTask('');\n    setNewTask('');\n  };\n  const cancelEdit = () => {\n    setEditing(false);\n    setEditTask('');\n    setNewTask('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: editing && editTask === task ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveTask,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span-task\",\n          style: {\n            textDecoration: task.completed ? 'line-through' : ''\n          },\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), task.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => incompleteTask(task.name),\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeTask(task.name),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editTaskHandler(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, task.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GI8GwWfnWdvj64lc1EHuJp9ekok=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","tasks","setTasks","newTask","setNewTask","editTask","setEditTask","editing","setEditing","addTask","name","completed","deleteTask","taskToDelete","filter","task","completeTask","completedTask","map","incompleteTask","editTaskHandler","taskToEdit","saveTask","cancelEdit","e","target","value","textDecoration"],"sources":["/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [editTask, setEditTask] = useState('');\n  const [editing, setEditing] = useState(false);\n\n  const addTask = () => {\n    setTasks([...tasks, { name: newTask, completed: false }]);\n    setNewTask('');\n  };\n\n  const deleteTask = (taskToDelete) => {\n    setTasks(tasks.filter((task) => task !== taskToDelete));\n  };\n  \n  const completeTask = (completedTask) => {\n    setTasks(\n      tasks.map((task) => {\n        if(task.name === completedTask) {\n          return {...task, completed: true}\n        }\n        else{\n          return task;\n        }\n      })\n    )\n  }\n\n\n  const incompleteTask = (completedTask) => {\n    setTasks(\n      tasks.map((task) => {\n        if(task.name === completedTask) {\n          return {...task, completed: false}\n        }\n        else{\n          return task;\n        }\n      })\n    )\n  }\n\n\n  const editTaskHandler = (taskToEdit) => {\n    setEditing(true);\n    setEditTask(taskToEdit);\n    setNewTask(taskToEdit.name);\n  };\n\n  const saveTask = () => {\n    setTasks(\n      tasks.map((task) =>\n        task === editTask ? { ...task, name: newTask } : task\n      )\n    );\n    setEditing(false);\n    setEditTask('');\n    setNewTask('');\n  };\n\n  const cancelEdit = () => {\n    setEditing(false);\n    setEditTask('');\n    setNewTask('');\n  };\n\n  return (\n    <div className='todo-list-container'>\n      <h1>Todo List</h1>\n      <div className='todo-text'>\n        <input\n          type='text'\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      {tasks.map((task) => (\n        <div key={task.name}>\n          {editing && editTask === task ? (\n            <div>\n              <input\n                type='text'\n                value={newTask}\n                onChange={(e) => setNewTask(e.target.value)}\n              />\n              <button onClick={saveTask}>Save</button>\n              <button onClick={cancelEdit}>Cancel</button>\n            </div>\n          ) : (\n            <div className='task-container'>\n              <span className='span-task' style={{textDecoration: task.completed ? 'line-through' : '' }}>{task.name}</span>\n              {task.completed ? (\n                <button onClick={() => incompleteTask(task.name)}>\n                    Incomplete\n                </button>\n                ) : (\n                <button onClick={() => completeTask(task.name)}>\n                    Complete\n                </button>\n              )}\n              <button onClick={() => editTaskHandler(task)}>Edit</button>\n              <button onClick={() => deleteTask(task)}>Delete</button>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}