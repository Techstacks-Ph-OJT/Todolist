{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const addTask = () => {\n    if (newTask === '') return;\n    setTasks([...tasks, {\n      title: newTask,\n      completed: false\n    }]);\n    setNewTask('');\n  };\n  const editTask = (index, newTitle) => {\n    if (newTitle === '') return;\n    const newTasks = [...tasks];\n    newTasks[index].title = newTitle;\n    setTasks(newTasks);\n  };\n  const toggleCompleted = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    setTasks(newTasks);\n  };\n  const deleteTask = index => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      title: task.title,\n      completed: task.completed,\n      onEdit: editTask,\n      onToggleCompleted: toggleCompleted,\n      onDelete: deleteTask\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Task","App","tasks","setTasks","newTask","setNewTask","addTask","title","completed","editTask","index","newTitle","newTasks","toggleCompleted","deleteTask","splice","e","target","value","map","task"],"sources":["/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Task from './Task';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  const addTask = () => {\n    if (newTask === '') return;\n    setTasks([...tasks, { title: newTask, completed: false }]);\n    setNewTask('');\n  };\n\n  const editTask = (index, newTitle) => {\n    if (newTitle === '') return;\n    const newTasks = [...tasks];\n    newTasks[index].title = newTitle;\n    setTasks(newTasks);\n  };\n\n  const toggleCompleted = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    setTasks(newTasks);\n  };\n\n  const deleteTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        value={newTask}\n        onChange={(e) => setNewTask(e.target.value)}\n      />\n      <button onClick={addTask}>Add Task</button>\n      {tasks.map((task, index) => (\n        <Task\n          key={index}\n          index={index}\n          title={task.title}\n          completed={task.completed}\n          onEdit={editTask}\n          onToggleCompleted={toggleCompleted}\n          onDelete={deleteTask}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,OAAO,GAAG,MAAM;IACpB,IAAIF,OAAO,KAAK,EAAE,EAAE;IACpBD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEK,KAAK,EAAEH,OAAO;MAAEI,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;IAC1DH,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMI,QAAQ,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACpC,IAAIA,QAAQ,KAAK,EAAE,EAAE;IACrB,MAAMC,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAAC;IAC3BU,QAAQ,CAACF,KAAK,CAAC,CAACH,KAAK,GAAGI,QAAQ;IAChCR,QAAQ,CAACS,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,eAAe,GAAIH,KAAK,IAAK;IACjC,MAAME,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAAC;IAC3BU,QAAQ,CAACF,KAAK,CAAC,CAACF,SAAS,GAAG,CAACI,QAAQ,CAACF,KAAK,CAAC,CAACF,SAAS;IACtDL,QAAQ,CAACS,QAAQ,CAAC;EACpB,CAAC;EAED,MAAME,UAAU,GAAIJ,KAAK,IAAK;IAC5B,MAAME,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAAC;IAC3BU,QAAQ,CAACG,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IACzBP,QAAQ,CAACS,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAER,OAAQ;MACf,QAAQ,EAAGY,CAAC,IAAKX,UAAU,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC5C,eACF;MAAQ,OAAO,EAAEZ,OAAQ;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,EAC1CJ,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEV,KAAK,kBACrB,QAAC,IAAI;MAEH,KAAK,EAAEA,KAAM;MACb,KAAK,EAAEU,IAAI,CAACb,KAAM;MAClB,SAAS,EAAEa,IAAI,CAACZ,SAAU;MAC1B,MAAM,EAAEC,QAAS;MACjB,iBAAiB,EAAEI,eAAgB;MACnC,QAAQ,EAAEC;IAAW,GANhBJ,KAAK;MAAA;MAAA;MAAA;IAAA,QAQb,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAnDQT,GAAG;AAAA,KAAHA,GAAG;AAqDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}