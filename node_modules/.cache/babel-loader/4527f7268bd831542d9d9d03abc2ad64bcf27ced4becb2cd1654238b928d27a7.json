{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const addTodo = () => {\n    if (inputValue.trim() !== \"\") {\n      setTodos([...todos, {\n        id: Date.now(),\n        text: inputValue\n      }]);\n      setInputValue(\"\");\n    }\n  };\n  const editTodo = (id, newText) => {\n    const newTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      text: newText\n    } : todo);\n    setTodos(newTodos);\n  };\n  const deleteTodo = id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: todo.text,\n          onChange: e => editTodo(todo.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"zYdvJNaWpQxKPoLXZxadUPZ/0Bo=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoList","todos","setTodos","inputValue","setInputValue","addTodo","trim","id","Date","now","text","editTodo","newText","newTodos","map","todo","deleteTodo","filter","e","target","value"],"sources":["/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const addTodo = () => {\n    if (inputValue.trim() !== \"\") {\n      setTodos([...todos, { id: Date.now(), text: inputValue }]);\n      setInputValue(\"\");\n    }\n  };\n\n  const editTodo = (id, newText) => {\n    const newTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, text: newText } : todo\n    );\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <button onClick={addTodo}>Add</button>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            <input\n              type=\"text\"\n              value={todo.text}\n              onChange={(e) => editTodo(todo.id, e.target.value)}\n            />\n            <button onClick={() => deleteTodo(todo.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMM,OAAO,GAAG,MAAM;IACpB,IAAIF,UAAU,CAACG,IAAI,EAAE,KAAK,EAAE,EAAE;MAC5BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEM,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;QAAEC,IAAI,EAAEP;MAAW,CAAC,CAAC,CAAC;MAC1DC,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,MAAMO,QAAQ,GAAG,CAACJ,EAAE,EAAEK,OAAO,KAAK;IAChC,MAAMC,QAAQ,GAAGZ,KAAK,CAACa,GAAG,CAAEC,IAAI,IAC9BA,IAAI,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,IAAI;MAAEL,IAAI,EAAEE;IAAQ,CAAC,GAAGG,IAAI,CACnD;IACDb,QAAQ,CAACW,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMG,UAAU,GAAIT,EAAE,IAAK;IACzB,MAAMM,QAAQ,GAAGZ,KAAK,CAACgB,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;IACvDL,QAAQ,CAACW,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAEV,UAAW;MAClB,QAAQ,EAAGe,CAAC,IAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/C,eACF;MAAQ,OAAO,EAAEf,OAAQ;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS,eACtC;MAAA,UACGJ,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACd;QAAA,wBACE;UACE,IAAI,EAAC,MAAM;UACX,KAAK,EAAEA,IAAI,CAACL,IAAK;UACjB,QAAQ,EAAGQ,CAAC,IAAKP,QAAQ,CAACI,IAAI,CAACR,EAAE,EAAEW,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QACnD,eACF;UAAQ,OAAO,EAAE,MAAMJ,UAAU,CAACD,IAAI,CAACR,EAAE,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GANpDQ,IAAI,CAACR,EAAE;QAAA;QAAA;QAAA;MAAA,QAQjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GA7CQP,QAAQ;AAAA,KAARA,QAAQ;AA+CjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}