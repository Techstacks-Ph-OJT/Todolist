{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: 'Task 1',\n    completed: false\n  }, {\n    id: 2,\n    title: 'Task 2',\n    completed: true\n  }, {\n    id: 3,\n    title: 'Task 3',\n    completed: false\n  }]);\n  const [editingTask, setEditingTask] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const handleEditTask = task => {\n    setEditingTask(task);\n    setNewTaskTitle(task.title);\n  };\n  const handleCancelEdit = () => {\n    setEditingTask(null);\n    setNewTaskTitle('');\n  };\n  const handleSaveTask = () => {\n    const updatedTasks = tasks.map(task => task.id === editingTask.id ? {\n      ...task,\n      title: newTaskTitle\n    } : task);\n    setTasks(updatedTasks);\n    setEditingTask(null);\n    setNewTaskTitle('');\n  };\n  const handleDeleteTask = task => {\n    const updatedTasks = tasks.filter(t => t.id !== task.id);\n    setTasks(updatedTasks);\n  };\n  const handleCompleteTask = task => {\n    const updatedTasks = tasks.map(t => t.id === task.id ? {\n      ...t,\n      completed: true\n    } : t);\n    setTasks(updatedTasks);\n  };\n  const handleIncompleteTask = task => {\n    const updatedTasks = tasks.map(t => t.id === task.id ? {\n      ...t,\n      completed: false\n    } : t);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTaskTitle,\n            onChange: e => setNewTaskTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveTask,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: task.completed ? 'line-through' : ''\n            },\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditTask(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), task.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleIncompleteTask(task),\n            children: \"Incomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCompleteTask(task),\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"HkE+nbfLzr1lY5q2o6dFLMQMc5E=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoList","tasks","setTasks","id","title","completed","editingTask","setEditingTask","newTaskTitle","setNewTaskTitle","handleEditTask","task","handleCancelEdit","handleSaveTask","updatedTasks","map","handleDeleteTask","filter","t","handleCompleteTask","handleIncompleteTask","e","target","value","textDecoration"],"sources":["/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TodoList() {\n  const [tasks, setTasks] = useState([\n    { id: 1, title: 'Task 1', completed: false },\n    { id: 2, title: 'Task 2', completed: true },\n    { id: 3, title: 'Task 3', completed: false },\n  ]);\n\n  const [editingTask, setEditingTask] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  const handleEditTask = (task) => {\n    setEditingTask(task);\n    setNewTaskTitle(task.title);\n  };\n\n  const handleCancelEdit = () => {\n    setEditingTask(null);\n    setNewTaskTitle('');\n  };\n\n  const handleSaveTask = () => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === editingTask.id ? { ...task, title: newTaskTitle } : task\n    );\n    setTasks(updatedTasks);\n    setEditingTask(null);\n    setNewTaskTitle('');\n  };\n\n  const handleDeleteTask = (task) => {\n    const updatedTasks = tasks.filter((t) => t.id !== task.id);\n    setTasks(updatedTasks);\n  };\n\n  const handleCompleteTask = (task) => {\n    const updatedTasks = tasks.map((t) =>\n      t.id === task.id ? { ...t, completed: true } : t\n    );\n    setTasks(updatedTasks);\n  };\n\n  const handleIncompleteTask = (task) => {\n    const updatedTasks = tasks.map((t) =>\n      t.id === task.id ? { ...t, completed: false } : t\n    );\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task.id}>\n            {editingTask?.id === task.id ? (\n              <div>\n                <input\n                  type=\"text\"\n                  value={newTaskTitle}\n                  onChange={(e) => setNewTaskTitle(e.target.value)}\n                />\n                <button onClick={handleSaveTask}>Save</button>\n                <button onClick={handleCancelEdit}>Cancel</button>\n              </div>\n            ) : (\n              <div>\n                <span\n                  style={{ textDecoration: task.completed ? 'line-through' : '' }}\n                >\n                  {task.title}\n                </span>\n                <button onClick={() => handleEditTask(task)}>Edit</button>\n                <button onClick={() => handleDeleteTask(task)}>Delete</button>\n                {task.completed ? (\n                  <button onClick={() => handleIncompleteTask(task)}>\n                    Incomplete\n                  </button>\n                ) : (\n                  <button onClick={() => handleCompleteTask(task)}>\n                    Complete\n                  </button>\n                )}\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}