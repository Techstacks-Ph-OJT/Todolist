{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  // rest of your code ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: editing && editTask === task ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTask,\n            onChange: e => setNewTask(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveTask,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: task.completed ? \"completed\" : \"\",\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), task.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => incompleteTask(task.name),\n            children: \"Incomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeTask(task.name),\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editTaskHandler(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(task),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, task.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoList","newTask","e","setNewTask","target","value","addTask","tasks","map","task","editing","editTask","saveTask","cancelEdit","completed","name","incompleteTask","completeTask","editTaskHandler","deleteTask"],"sources":["/Users/macbookair/Desktop/Reactpractice/mytodolist/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst TodoList = () => {\n  // rest of your code ...\n\n  return (\n    <div className=\"todo-container\">\n      <h1>Todo List</h1>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      <div className=\"task-list\">\n        {tasks.map((task) => (\n          <div key={task.name} className=\"task-item\">\n            {editing && editTask === task ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={newTask}\n                  onChange={(e) => setNewTask(e.target.value)}\n                />\n                <button onClick={saveTask}>Save</button>\n                <button onClick={cancelEdit}>Cancel</button>\n              </>\n            ) : (\n              <>\n                <span\n                  className={task.completed ? \"completed\" : \"\"}\n                >{task.name}</span>\n                {task.completed ? (\n                  <button onClick={() => incompleteTask(task.name)}>\n                    Incomplete\n                  </button>\n                ) : (\n                  <button onClick={() => completeTask(task.name)}>\n                    Complete\n                  </button>\n                )}\n                <button onClick={() => editTaskHandler(task)}>Edit</button>\n                <button onClick={() => deleteTask(task)}>Delete</button>\n              </>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC;AAAA;AAEnB,MAAMC,QAAQ,GAAG,MAAM;EACrB;;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEC,OAAQ;QACf,QAAQ,EAAGC,CAAC,IAAKC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5C,eACF;QAAQ,OAAO,EAAEC,OAAQ;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACvC,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,UACvBC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACd;QAAqB,SAAS,EAAC,WAAW;QAAA,UACvCC,OAAO,IAAIC,QAAQ,KAAKF,IAAI,gBAC3B;UAAA,wBACE;YACE,IAAI,EAAC,MAAM;YACX,KAAK,EAAER,OAAQ;YACf,QAAQ,EAAGC,CAAC,IAAKC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAC5C,eACF;YAAQ,OAAO,EAAEO,QAAS;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAS,eACxC;YAAQ,OAAO,EAAEC,UAAW;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,gBAC3C,gBAEH;UAAA,wBACE;YACE,SAAS,EAAEJ,IAAI,CAACK,SAAS,GAAG,WAAW,GAAG,EAAG;YAAA,UAC7CL,IAAI,CAACM;UAAI;YAAA;YAAA;YAAA;UAAA,QAAQ,EAClBN,IAAI,CAACK,SAAS,gBACb;YAAQ,OAAO,EAAE,MAAME,cAAc,CAACP,IAAI,CAACM,IAAI,CAAE;YAAA,UAAC;UAElD;YAAA;YAAA;YAAA;UAAA,QAAS,gBAET;YAAQ,OAAO,EAAE,MAAME,YAAY,CAACR,IAAI,CAACM,IAAI,CAAE;YAAA,UAAC;UAEhD;YAAA;YAAA;YAAA;UAAA,QACD,eACD;YAAQ,OAAO,EAAE,MAAMG,eAAe,CAACT,IAAI,CAAE;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAS,eAC3D;YAAQ,OAAO,EAAE,MAAMU,UAAU,CAACV,IAAI,CAAE;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;MAE3D,GA5BOA,IAAI,CAACM,IAAI;QAAA;QAAA;QAAA;MAAA,QA8BpB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAlDIf,QAAQ;AAoDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}