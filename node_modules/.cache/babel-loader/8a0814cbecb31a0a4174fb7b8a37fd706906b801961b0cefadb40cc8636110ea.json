{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Reactpractice/mytodolist/src/Task.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Task = _ref => {\n  let {\n    id,\n    taskName,\n    completed,\n    completeTask,\n    deleteHandle,\n    incompleteTask,\n    handleEditTask,\n    handleCancelEdit,\n    handleSaveTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textDecoration: completed ? \"line-through\" : \"\"\n      },\n      children: taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => completeTask(id),\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => incompleteTask(id),\n      children: \"Incomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteHandle(id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleEditTask({\n        id,\n        taskName\n      }),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), handleSaveTask && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskName,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveTask,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelEdit,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 1\n  }, this);\n};\n_c = Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","Task","id","taskName","completed","completeTask","deleteHandle","incompleteTask","handleEditTask","handleCancelEdit","handleSaveTask","textDecoration","e","setNewTask","target","value"],"sources":["/Users/macbookair/Desktop/Reactpractice/mytodolist/src/Task.js"],"sourcesContent":["import React from 'react';\n\nexport const Task = ({\nid,\ntaskName,\ncompleted,\ncompleteTask,\ndeleteHandle,\nincompleteTask,\nhandleEditTask,\nhandleCancelEdit,\nhandleSaveTask,\n}) => {\nreturn (\n<div>\n<div style={{ textDecoration: completed ? \"line-through\" : \"\" }}>\n{taskName}\n</div>\n<button onClick={() => completeTask(id)}>Complete</button>\n<button onClick={() => incompleteTask(id)}>Incomplete</button>\n<button onClick={() => deleteHandle(id)}>Delete</button>\n<button onClick={() => handleEditTask({ id, taskName })}>Edit</button>\n{handleSaveTask && (\n<>\n<input type=\"text\" value={taskName} onChange={(e) => setNewTask(e.target.value)}/>\n<button onClick={handleSaveTask}>Save</button>\n<button onClick={handleCancelEdit}>Cancel</button>\n</>\n)}\n</div>\n);\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,OAAO,MAAMC,IAAI,GAAG,QAUd;EAAA,IAVe;IACrBC,EAAE;IACFC,QAAQ;IACRC,SAAS;IACTC,YAAY;IACZC,YAAY;IACZC,cAAc;IACdC,cAAc;IACdC,gBAAgB;IAChBC;EACA,CAAC;EACD,oBACA;IAAA,wBACA;MAAK,KAAK,EAAE;QAAEC,cAAc,EAAEP,SAAS,GAAG,cAAc,GAAG;MAAG,CAAE;MAAA,UAC/DD;IAAQ;MAAA;MAAA;MAAA;IAAA,QACH,eACN;MAAQ,OAAO,EAAE,MAAME,YAAY,CAACH,EAAE,CAAE;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1D;MAAQ,OAAO,EAAE,MAAMK,cAAc,CAACL,EAAE,CAAE;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,eAC9D;MAAQ,OAAO,EAAE,MAAMI,YAAY,CAACJ,EAAE,CAAE;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eACxD;MAAQ,OAAO,EAAE,MAAMM,cAAc,CAAC;QAAEN,EAAE;QAAEC;MAAS,CAAC,CAAE;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,EACrEO,cAAc,iBACf;MAAA,wBACA;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEP,QAAS;QAAC,QAAQ,EAAGS,CAAC,IAAKC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAClF;QAAQ,OAAO,EAAEL,cAAe;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9C;QAAQ,OAAO,EAAED,gBAAiB;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBAEjD;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAEN,CAAC;AAAC,KA7BWR,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}